import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'signing'
    id 'net.nemerosa.versioning' version '2.14.0'
    id 'jacoco'
    id 'org.sonarqube' version '3.2.0'
}

group = 'io.github.joealisson'
version = '3.4.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11

ext.moduleName = 'io.github.joealisson.mmocore'
ext.revision = versioning.info.build
ext.buildJDK = "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString()

sourceSets {
    main {
        java {
            srcDirs = ['src/main/io.github.joealisson.mmocore']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api 'org.slf4j:slf4j-api:2.0.0-alpha1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.awaitility:awaitility:4.0.3'
}

afterEvaluate {
    compileJava {
        inputs.property("moduleName", moduleName)
        doFirst {
            options.compilerArgs = ['--module-path', classpath.asPath ]
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            classpath = files()
        }
    }
}

jar {
    manifest {
        attributes('Built-By'       : System.getProperty('user.name'),
                   'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Build-Revision' : revision,
                   'Build-Version'  : archiveVersion,
                   'Build-Jdk'      : buildJDK,
                   'Automatic-Module-Name': moduleName)
    }
}

task jarSources(type:Jar){
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

javadoc {
    exclude 'module-info.java'
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}


publishing {
    publications {

        maven(MavenPublication) {
            from components.java

            artifact jarSources
            artifact javadocJar

            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE'
                    into 'META-INF'
                }
            }

            pom {
                name = 'Async Mmocore'
                description = 'The Goal of the async-mmocore is to provide a way to handle MMO connections abstracting the networking layer complexity.'
                url = 'https://github.com/JoeAlisson/async-mmocore'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://opensource.org/licenses/AGPL-3.0'
                    }
                }
                developers {
                    developer {
                        id = 'JoeAlisson'
                        name = 'Alisson Oliveira'
                        email = 'joe.alisson@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/JoeAlisson/async-mmocore.git'
                    developerConnection = 'scm:git:ssh://github.com:JoeAlisson/async-mmocore.git'
                    url = 'https://github.com/JoeAlisson/async-mmocore/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

sonarqube {
    properties {
        property "sonar.projectKey", "JoeAlisson_async-mmocore2"
        property "sonar.organization", "joealisson-github"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}