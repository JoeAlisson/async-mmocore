import java.text.SimpleDateFormat

plugins {
    id "java-library"
    id "idea"
    id "eclipse"
    id 'maven'
    id 'signing'
    id "net.nemerosa.versioning" version "2.8.2"
}

group = 'io.github.joealisson'
version = '2.1.0'

sourceCompatibility = JavaVersion.VERSION_1_8

ext.moduleName = 'io.github.joealisson.mmocore'
ext.revision = versioning.info.build
ext.buildJDK = "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString()

sourceSets {
    main {
        java {
            srcDirs = ['src/main/io.github.joealisson.mmocore']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.8.0-beta2'
    testCompile 'junit:junit:4.12'
}

compileJava {
    inputs.property("moduleName", moduleName)
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

jar {
    manifest {
        attributes('Built-By'       : System.getProperty('user.name'),
                   'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Build-Revision' : revision,
                   'Build-Version'  : version,
                   'Build-Jdk'      : buildJDK)
    }
}

task jarSources(type:Jar){
    classifier = 'source'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, jarSources
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Example Application'
                packaging 'jar'
                // optionally artifactId can be defined here 
                description 'The Goal of the async-mmocore is to provide a way to handle MMO connections abstracting the networking layer complexity.'
                url 'https://github.com/JoeAlisson/async-mmocore'

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://opensource.org/licenses/AGPL-3.0'
                    }
                }
                developers {
                    developer {
                        id = 'joeAlisson'
                        name = 'Alisson Oliveira'
                        email = 'joe.alisson@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/JoeAlisson/async-mmocore.git'
                    developerConnection = 'scm:git:ssh://github.com/JoeAlisson/async-mmocore.git'
                    url = 'https://github.com/JoeAlisson/async-mmocore'
                }
            }
        }
    }
}